@model EvaluateMVCApp.Student

@{
    ViewBag.Title = "UploadSubmission";
}

<br />
@using (Html.BeginForm("UploadSubmission", "Submission", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color : coral">Student Submission</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RollNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RollNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Roll Number - Section" }, })
                @Html.ValidationMessageFor(model => model.RollNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Student Name" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Standard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Standard,
                  new List<SelectListItem> {
                       new SelectListItem { Value = "1" , Text = "1" },
                       new SelectListItem { Value = "2" , Text = "2" },
                       new SelectListItem { Value = "3" , Text = "3" },
                       new SelectListItem { Value = "4" , Text = "4" },
                       new SelectListItem { Value = "5" , Text = "5" },
                       new SelectListItem { Value = "6" , Text = "6" },
                       new SelectListItem { Value = "7" , Text = "7" },
                       new SelectListItem { Value = "8" , Text = "8" },
                       new SelectListItem { Value = "9" , Text = "9" },
                       new SelectListItem { Value = "10" , Text = "10" }
                    },
                  new { @class= "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Subject,
                  new List<SelectListItem> {
                       new SelectListItem { Value = "Physics" , Text = "Physics" },
                       new SelectListItem { Value = "English" , Text = "English" },
                       new SelectListItem { Value = "Science" , Text = "Science" },
                       new SelectListItem { Value = "Social Sciences" , Text = "Social Sciences" },
                       new SelectListItem { Value = "Computers" , Text = "Computer" }
                    },
                  new { @class= "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Question,
                                 new List<SelectListItem> {
                                      new SelectListItem { Value = "1" , Text = "What is metal?" },
                                      new SelectListItem { Value = "2" , Text = "What is the difference between conductor and insulator?" }
                                   },
                                 new { @class= "form-control" })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmissionFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" required />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p class="text-danger">
                    @ViewBag.ValidationMessage
                </p>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
